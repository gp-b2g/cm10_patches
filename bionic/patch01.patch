diff --git a/libc/Android.mk b/libc/Android.mk
index 78dfebe..3a1a45d 100644
--- a/libc/Android.mk
+++ b/libc/Android.mk
@@ -181,6 +181,7 @@ libc_common_src_files := \
 	string/memccpy.c \
 	string/memmem.c \
 	string/memrchr.c \
+	bionic/memchr.c \
 	string/memswap.c \
 	string/strcasecmp.c \
 	string/strcasestr.c \
@@ -645,8 +646,10 @@ else # !arm
 endif # !arm
 
 ifeq ($(TARGET_ARCH),x86)
-  libc_common_cflags += -DSOFTFLOAT
-  libc_crt_target_cflags :=
+  libc_common_cflags += -DSOFTFLOAT \
+                        -fno-pic \
+                        -fno-pie
+  libc_crt_target_cflags := -m32
   ifeq ($(ARCH_X86_HAVE_SSE2),true)
       libc_crt_target_cflags += -DUSE_SSE2=1
   endif
diff --git a/libc/bionic/memchr.c b/libc/bionic/memchr.c
new file mode 100644
index 0000000..b14167a
--- /dev/null
+++ b/libc/bionic/memchr.c
@@ -0,0 +1,46 @@
+/*
+ * Copyright (C) 2008 The Android Open Source Project
+ * All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *  * Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ *  * Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in
+ *    the documentation and/or other materials provided with the
+ *    distribution.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+ * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
+ * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
+ * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
+ * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
+ * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
+ * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
+ * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
+ * SUCH DAMAGE.
+ */
+#include <stddef.h>
+#include <string.h>
+
+void *memchr(const void *s, int c, size_t n)
+{
+    const unsigned char*  p   = s;
+    const unsigned char*  end = p + n;
+
+    for (;;) {
+        if (p >= end || p[0] == c) break; p++;
+        if (p >= end || p[0] == c) break; p++;
+        if (p >= end || p[0] == c) break; p++;
+        if (p >= end || p[0] == c) break; p++;
+    }
+    if (p >= end)
+        return NULL;
+    else
+        return (void*) p;
+}
